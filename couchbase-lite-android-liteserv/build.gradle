
apply plugin: 'maven'

def couchbaseMavenRepo = 'http://files.couchbase.com/maven2/'

def localMavenRepo     = System.getProperty('MAVEN_LOCAL_REPO') == null ?
                         'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath :
                         'file://' + System.getProperty('MAVEN_LOCAL_REPO')
repositories {
    mavenCentral()
    maven { url couchbaseMavenRepo }
    maven { url localMavenRepo     }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'android'


def buildLiteServWithArtifacts = System.getProperty("buildLiteServWithArtifacts")

dependencies {

    compile 'com.android.support:support-v4:13.0.+'

    compile fileTree(dir: 'libs', include: '*.jar')

    compile buildLiteServWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-core') :
            'com.couchbase.lite:java-core:' + System.getenv("MAVEN_UPLOAD_VERSION")

    compile buildLiteServWithArtifacts == null ?
            project(':libraries:couchbase-lite-android') :
            'com.couchbase.lite:android:' + System.getenv("MAVEN_UPLOAD_VERSION")

    compile buildLiteServWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-javascript') :
            'com.couchbase.lite:java-javascript:' + System.getenv("MAVEN_UPLOAD_VERSION")

    compile buildLiteServWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-listener') :
            'com.couchbase.lite:java-listener:' + System.getenv("MAVEN_UPLOAD_VERSION")

}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    lintOptions {
        abortOnError false
    }

    // workaround for "duplicate files during packaging of APK" issue
    // see https://groups.google.com/d/msg/adt-dev/bl5Rc4Szpzg/wC8cylTWuIEJ
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

}


task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("MAVEN_UPLOAD_USERNAME") + ":" + System.getenv("MAVEN_UPLOAD_PASSWORD")
        mkcolPath  = System.getenv("MAVEN_UPLOAD_REPO_URL") + "com/couchbase/lite/couchbase-lite-java-listener/" + System.getenv("MAVEN_UPLOAD_VERSION") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("MAVEN_UPLOAD_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("MAVEN_UPLOAD_REPO_URL")) {
                authentication(userName: System.getenv("MAVEN_UPLOAD_USERNAME"), password: System.getenv("MAVEN_UPLOAD_PASSWORD"))
            }
            pom.version = System.getenv("MAVEN_UPLOAD_VERSION")  
            pom.groupId = 'com.couchbase.lite'
            pom.artifactId = 'couchbase-lite-android-liteserv'
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
